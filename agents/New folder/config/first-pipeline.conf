
input {
    beats {
        port => 5044    
   }
 ## redis {
  # host => "redis"
  #  key => "logstash"
#	data_type => "list"
#   }
  
}

filter {
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{AMAVIS_FILECHECK}" ]
      add_tag => [ "quarantine_file" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{AMAVIS_CHECKING}" ]
      add_tag => [ "checking" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{AMAVIS_DKIM}" ]
      add_tag => [ "to_dkim" ]
      remove_tag => [ "unknown" ]
    }

    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{AMAVISSTATUS:status} %{DATA:result} (\(%{DATA:result_summary}\) )?\{%{DATA:actions}\},( %{AMAVISORGCON})? <(?:%{FROMEMAILADDRESS:from})?> -> %{DATA:to},( quarantine: %{DATA:quarantine},)?( Queue-ID: %{QUEUEID:qid})?(, Message-ID: <%{DATA:messageid}>,)?( mail_id: %{DATA:mail_id},)?( Hits: %{DATA:hits},)?( size: %{NONNEGINT:size:int},)?( queued_as: %{QUEUEID:queued_as},)?( dkim_sd=%{DATA:dkim_sd},)? %{NONNEGINT:delay} ms" ]
      add_tag => [ "result" ]
      remove_tag => [ "unknown" ]
    }
  #    split {
 #  field => "to"
 #  terminator => ","
#  }
    if [to] {
      mutate { 
    	  gsub => [ "to", "[<>]", "" ]
    	  split => [ "to", "," ]
        add_tag => [ "ablesplit" ]
      }

  }
     # split {
    #    field => "to"
      #  add_tag => [ "splitted" ]
    #  }
 #}
   if "ablesplit" in [tags] and [to] {
    # json {
       #     source => "to"
      #  }
        split { 
            field => "[to]"
            add_field => { "[@metadata][beat]" => "filebeat" }
   #         add_tag => ["splitted"]
        }
  }
  #    split {
 #  field => "to"
  # terminator => ","
 # }
#}
    if [actions] == "RelayedInbound" and ![from] {
     mutate {
     add_field => { "from" => "%{messageid}" }
     add_tag => [ "changed" ]
      }
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "to", "%{TOEMAILADDRESS}" ]
    }

grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDTLSCONNECT}" ]
      add_tag => [ "tls", "connect" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDCONNECT}" ]
      add_tag => [ "connect" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDDISCONNECT}" ]
      add_tag => [ "disconnect" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDACTIONS}" ]
      add_tag => [ "action" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDTIMEOUTS}" ]
      add_tag => [ "timeout" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDSETQIDWITHSASL}" ]
      add_tag => [ "sasl", "login", "set_queue_id" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDSETQID}" ]
      add_tag => [ "set_queue_id" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDLOGINFAILED}" ]
      add_tag => [ "sasl", "login", "failed" ]
      remove_tag => [ "unknown" ]
    }
grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => ["message", "%{POSTFIX}"]
      add_tag => ["postfix", "unknown", "%{[component]}"]
    }
     grok {
          patterns_dir => ["/etc/logstash/patterns/"]
          match => [ "message", "%{AMAVIS}" ]
          add_tag => [ "amavis" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{SASLAUTHD}" ]
        add_tag => [ "saslauthd" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{OPENDKIM}" ]
        add_tag => [ "result", "opendkim" ]
        remove_tag => [ "unknown" ]
      }
     grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXQMGR}" ]
      remove_tag => [ "unknown" ]
    }
     grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXCLEANUP}" ]
        remove_tag => [ "unknown" ]
    }
    grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{ZBOX_SUBJECT}" ]
        add_tag => [ "antispam", "zbox_subject" ]
        remove_tag => [ "unknown" ]
    }
    grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{ZBOX_ATTACHMENT}" ]
        add_tag => [ "antispam", "zbox_attachment" ]
        remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXBOUNCE}" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "\(250 2.0.0 from MTA\(smtp:\[127.0.0.1\]:10030\): 250 2.0.0 Ok: queued as %{QUEUEID:queued_as}\)" ]
      add_tag => [ "to_dkim" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "\(250 2.0.0 from MTA\(smtp:\[127.0.0.1\]:10025\): 250 2.0.0 Ok: queued as %{QUEUEID:queued_as}\)" ]
      add_tag => [ "to_amavis" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPRELAYGENERAL}" ]
      add_tag => [ "relay" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPCONNECT}" ]
      add_tag => [ "connect" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTP4XX}" ]
      add_tag => [ "4xx" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTP5XX}" ]
      add_tag => [ "5xx" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPREFUSAL}" ]
      add_tag => [ "refusal" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPLOSTCONNECTION}" ]
      add_tag => [ "lost_connection" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPTIMEOUT}" ]
      add_tag => [ "lost_connection" ]
      remove_tag => [ "unknown" ]
    }
     grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXPOSTSUPER}" ]
      add_tag => [ "relay" ]
      remove_tag => [ "unknown" ]
    }
    geoip {
source => "clientip"
target => "geoip"
add_tag => [ "sender-geoip" ]
add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
}

mutate {
convert => [ "[geoip][coordinates]", "float"]

}






}



output {
 

  if [type] != "collectd" { 
   elasticsearch {
    hosts => "elasticsearch:9200"
    manage_template => false
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
 }


}

if "changed" in [tags] {
stdout {
 codec => rubydebug { metadata => true }

 }
  }

}
#if [system][filesystem][device_name] == "/dev/xvda1" {
#stdout {
# codec => rubydebug { metadata => true }
 
# }
#}


