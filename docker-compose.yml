version: '2'

services:
   nginx:
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default:/etc/nginx/sites-enabled/default
    depends_on:
      - kibana
    networks:
      - docker_elk  
  elasticsearch:
    container_name: elasticsearch
    build: elasticsearch/
#    command: elasticsearch -Des.network.host=_non_loopback_ -Des.cluster.name: my-cluster
    volumes:
    - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
#   volumes:
#     - /path/to/storage:/usr/share/elasticsearch/data     
    networks:
      - docker_elk
  logstash:
    build: logstash/
    container_name: logstash
    command: -f /etc/logstash/conf.d/
    volumes:
      - ./logstash/config:/etc/logstash/conf.d
    ports:
      - "5044:5044"
      - "25826:25826/udp"
    networks:
      - docker_elk
    depends_on:
      - elasticsearch
    environment:
      - LS_HEAP_SIZE=2048m 
      - LS_JAVA_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=18080 -Dcom.sun.management.jmxremote.rmi.port=18080 -Djava.rmi.server.hostname=DOCKER_HOST_IP -Dcom.sun.management.jmxremote.local.only=false
  kibana:
    build: kibana/
    container_name: kibana
    volumes:
      - ./kibana/config/:/etc/kibana/
    ports:
      - "5601:5601"
    networks:
      - docker_elk
    depends_on:
      - elasticsearch
  curl:   

networks:
  docker_elk:
    driver: bridge
